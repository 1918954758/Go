Go语言数据类型
    在Go语言中，数据类型用于声明函数和变量。
    数据类型的出现是为了把数据分成所需内存大小不同的数据，变成的时候需要用大数据的时候才需要申请大内存，就可以充分利用内存。
    Go语言按类别由以下几种数据类型：
        1). 布尔型
        布尔型的值只有true和false。如：var b bool = true。
        2). 数字类型
        整型int和浮点型float32、float64，Go语言支持整型和浮点型数字，并且支持复数，其中位的运算采用补码。
        3). 字符串类型
        字符串就是一串固定长度的字符链接起来的字符序列。Go的字符串是由单个字节连接起来的。Go语言的字符串的字节使用UTF-8编码标识Unicode文本。
        4). 派生类型
            a. 指针类型(Pointer)
            b. 数组类型
            c. 结构化类型(struct)
            d. Channel类型
            e. 函数类型
            f. 切片类型
            g. 接口类型(interface)
            h. Map类型(集合)
1. 数字类型
    1). uint8 : 无符号8位整型 0 - 255
    2). uint16 : 无符号16位整型 0 - 65535
    3). uint32 : 无符号32位整型 0 - 4294967295
    4). uint64 : 无符号64位整型 0 - 18446744073709551615

    5). int8 : 有符号8位整型 -128 - 127
    6). int16 : 有符号16位整型 -32768 - 32767
    7). int32 : 有符号32位整型 -2147483648 - 2147483647
    8). int64 : 有符号64位整型 -9223372036854775808 - 9223372036854775807
2. 浮点型
    1). float32 : IEEE - 754  32位浮点型数
    2). float64 : IEEE - 754 64位浮点型数
    3). complex64 : 32位实数和虚数
    5). complex128 : 64位实数和虚数
3. 其他数字类型
    1). byte : 类似uint8
    2). rune : 类似int32
    3). uint : 32或64位
    4). int : 与uint一样大小
    5). uintptr : 无符号整型，用于存放一个指针